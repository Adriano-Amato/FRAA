1
1

00:00:02,070  -->  00:00:03,920
<v Narrator>So in order to switch to Vue,</v>
2

2

00:00:03,920  -->  00:00:06,460
I will mark all that code,
3

3

00:00:06,460  -->  00:00:07,970
and comment it out.
4

4

00:00:07,970  -->  00:00:09,950
Which you can do by selecting this all
5

5

00:00:09,950  -->  00:00:11,310
and then going to Edit,
6

6

00:00:11,310  -->  00:00:14,350
and then toggle line or block comment.
7

7

00:00:14,350  -->  00:00:16,600
I used line comment here.
8

8

00:00:16,600  -->  00:00:19,690
So now this code will not have any effect anymore.
9

9

00:00:19,690  -->  00:00:21,050
I'm not deleting it
10

10

00:00:21,050  -->  00:00:23,640
so that we can still see it and compare it.
11

11

00:00:23,640  -->  00:00:26,040
Because now I wanna use Vue.
12

12

00:00:26,040  -->  00:00:28,540
For that we first of all need to add Vue.
13

13

00:00:28,540  -->  00:00:30,960
We need to import Vue.
14

14

00:00:30,960  -->  00:00:33,880
We can do this from Vuejs.org.
15

15

00:00:33,880  -->  00:00:36,860
There, we can click on Get Started,
16

16

00:00:36,860  -->  00:00:39,410
and then on Installation.
17

17

00:00:39,410  -->  00:00:42,990
Here you find different ways of adding Vue to a project,
18

18

00:00:42,990  -->  00:00:46,450
and we will explore different ways for all this course,
19

19

00:00:46,450  -->  00:00:48,170
But for this basic project,
20

20

00:00:48,170  -->  00:00:50,020
for this basic demo here,
21

21

00:00:50,020  -->  00:00:51,700
we can click on CDN
22

22

00:00:51,700  -->  00:00:55,270
and grab this CDN link which you see here.
23

23

00:00:55,270  -->  00:00:56,280
Side note,
24

24

00:00:56,280  -->  00:00:57,740
the exact link you see
25

25

00:00:57,740  -->  00:00:59,740
when you visit this page might differ,
26

26

00:00:59,740  -->  00:01:03,480
but you will find some script tag with a link
27

27

00:01:03,480  -->  00:01:05,683
that will import Vue.
28

28

00:01:06,700  -->  00:01:08,400
So let's grab that,
29

29

00:01:08,400  -->  00:01:13,090
go to index HTML and add that before your script here.
30

30

00:01:13,090  -->  00:01:16,650
So before we execute app.js,
31

31

00:01:16,650  -->  00:01:21,650
add this script with the Vue CDN above your own script.
32

32

00:01:22,920  -->  00:01:26,140
That will your script allow to use Vue.
33

33

00:01:26,140  -->  00:01:29,040
So now let's save this file.
34

34

00:01:29,040  -->  00:01:31,530
In app.js we can use Vue.
35

35

00:01:31,530  -->  00:01:34,480
And now what does use Vue mean?
36

36

00:01:34,480  -->  00:01:38,070
With Vue, we can solve the same problem,
37

37

00:01:38,070  -->  00:01:39,570
if you wanna call it like this,
38

38

00:01:39,570  -->  00:01:41,750
in a totally different way.
39

39

00:01:41,750  -->  00:01:43,770
In regular Java script,
40

40

00:01:43,770  -->  00:01:45,230
which we used before,
41

41

00:01:45,230  -->  00:01:47,850
we used a so-called imperative approach.
42

42

00:01:47,850  -->  00:01:52,050
Which means we define every single step,
43

43

00:01:52,050  -->  00:01:53,670
step by step,
44

44

00:01:53,670  -->  00:01:56,370
which should be executed by the browser.
45

45

00:01:56,370  -->  00:01:57,770
Get access to the button,
46

46

00:01:57,770  -->  00:01:59,310
get access to the input element,
47

47

00:01:59,310  -->  00:02:01,200
get access to the list element,
48

48

00:02:01,200  -->  00:02:02,820
create a function,
49

49

00:02:02,820  -->  00:02:05,760
add a click event handler to the button
50

50

00:02:05,760  -->  00:02:08,700
and execute this function of a click occurs.
51

51

00:02:08,700  -->  00:02:10,270
And in that function,
52

52

00:02:10,270  -->  00:02:11,960
get access to the entered value,
53

53

00:02:11,960  -->  00:02:13,600
create a list item element,
54

54

00:02:13,600  -->  00:02:15,220
add the text content,
55

55

00:02:15,220  -->  00:02:16,830
append this list item,
56

56

00:02:16,830  -->  00:02:18,340
clear the value.
57

57

00:02:18,340  -->  00:02:19,300
You see a pattern?
58

58

00:02:19,300  -->  00:02:21,700
We define every single step.
59

59

00:02:21,700  -->  00:02:24,620
With Vue, we have a totally different approach.
60

60

00:02:24,620  -->  00:02:29,100
There, we define the desired end result,
61

61

00:02:29,100  -->  00:02:32,490
and the data we will need in our Vue app,
62

62

00:02:32,490  -->  00:02:35,520
and we will leave it up to Vue to figure out
63

63

00:02:35,520  -->  00:02:39,550
what needs to be created or added or changed in the Dom
64

64

00:02:39,550  -->  00:02:41,003
at which point of time.
65

65

00:02:41,910  -->  00:02:44,240
And for that, we need to create a view app,
66

66

00:02:44,240  -->  00:02:47,580
which takes control over our HTML code.
67

67

00:02:47,580  -->  00:02:49,680
And we do this by calling Vue,
68

68

00:02:49,680  -->  00:02:52,710
which is a global object that is available,
69

69

00:02:52,710  -->  00:02:54,793
thanks to our view CDN import,
70

70

00:02:55,680  -->  00:02:56,753
Vue.createApp.
71

71

00:02:58,870  -->  00:03:01,140
So this global Vue object,
72

72

00:03:01,140  -->  00:03:02,917
we can call createApp.
73

73

00:03:04,080  -->  00:03:07,180
CreateApp takes an object, a JavaScript object,
74

74

00:03:07,180  -->  00:03:10,440
where we configure this Vue app.
75

75

00:03:10,440  -->  00:03:12,090
And when I say configure,
76

76

00:03:12,090  -->  00:03:15,050
I mean things like setting up which kind of data
77

77

00:03:15,050  -->  00:03:17,090
we will use in our Vue app.
78

78

00:03:17,090  -->  00:03:18,850
For example, in this demo,
79

79

00:03:18,850  -->  00:03:21,720
I plan on working with a list of goals.
80

80

00:03:21,720  -->  00:03:25,840
So one piece of data which we'll need is that list of goals.
81

81

00:03:25,840  -->  00:03:27,810
Another piece of data which we'll need
82

82

00:03:27,810  -->  00:03:30,020
is what the user entered here.
83

83

00:03:30,020  -->  00:03:34,510
And we define that data by adding a data property
84

84

00:03:34,510  -->  00:03:37,370
to this object we pass to createApp,
85

85

00:03:37,370  -->  00:03:39,623
and this has to be called data.
86

86

00:03:40,460  -->  00:03:43,440
It actually holds a function as a value
87

87

00:03:43,440  -->  00:03:45,620
and therefore in modern JavaScript,
88

88

00:03:45,620  -->  00:03:47,330
we can also write it like this,
89

89

00:03:47,330  -->  00:03:48,930
which is the exact same.
90

90

00:03:48,930  -->  00:03:50,610
A property named data,
91

91

00:03:50,610  -->  00:03:53,200
which has a function as a value.
92

92

00:03:53,200  -->  00:03:56,220
This function must return an object.
93

93

00:03:56,220  -->  00:03:57,320
And in this object,
94

94

00:03:57,320  -->  00:04:00,760
we can then define the data our Vue app should be aware of.
95

95

00:04:00,760  -->  00:04:01,870
As a side note,
96

96

00:04:01,870  -->  00:04:03,980
if this is a bit too fast for you,
97

97

00:04:03,980  -->  00:04:04,813
no worries.
98

98

00:04:04,813  -->  00:04:07,850
We'll walk through all the basics in greater depth
99

99

00:04:07,850  -->  00:04:09,390
in the next module.
100

100

00:04:09,390  -->  00:04:11,430
This year is just a quick overview,
101

101

00:04:11,430  -->  00:04:13,480
which is why I'm not diving super deep
102

102

00:04:13,480  -->  00:04:15,470
into all these concepts at the moment.
103

103

00:04:15,470  -->  00:04:19,020
We'll definitely do that in the next section though.
104

104

00:04:19,020  -->  00:04:20,840
So we need to return an object here.
105

105

00:04:20,840  -->  00:04:21,990
And in here, we can simply
106

106

00:04:21,990  -->  00:04:24,670
add the data we wanna manage in this app.
107

107

00:04:24,670  -->  00:04:26,020
This would be a goals array,
108

108

00:04:26,020  -->  00:04:29,380
which initially is empty as a key value pair,
109

109

00:04:29,380  -->  00:04:30,960
and the entered value,
110

110

00:04:30,960  -->  00:04:32,710
which initially is an empty string.
111

111

00:04:33,640  -->  00:04:35,680
And now these two pieces of data
112

112

00:04:35,680  -->  00:04:39,870
are pieces of data Vue is aware of.
113

113

00:04:39,870  -->  00:04:42,530
And that will become important later.
114

114

00:04:42,530  -->  00:04:45,640
Now we can connect this entered value
115

115

00:04:45,640  -->  00:04:47,330
with this input
116

116

00:04:47,330  -->  00:04:52,150
by adding a special so-called directive on the input,
117

117

00:04:52,150  -->  00:04:54,650
a special HTML attribute.
118

118

00:04:54,650  -->  00:04:59,010
And that would be the V-model attribute.
119

119

00:04:59,010  -->  00:05:02,990
That's not a default attribute, which is supported by HTML.
120

120

00:05:02,990  -->  00:05:05,860
This will only be understood by Vue.
121

121

00:05:05,860  -->  00:05:07,380
And as a value,
122

122

00:05:07,380  -->  00:05:09,960
we repeat the name of this property,
123

123

00:05:09,960  -->  00:05:10,993
entered value.
124

124

00:05:12,170  -->  00:05:13,950
This will establish a connection
125

125

00:05:13,950  -->  00:05:17,100
between this input and the value being entered there,
126

126

00:05:17,100  -->  00:05:19,040
and this data property.
127

127

00:05:19,040  -->  00:05:21,150
And Vue will manage this for us.
128

128

00:05:21,150  -->  00:05:24,030
It will automatically listen to what the user enters
129

129

00:05:24,030  -->  00:05:26,730
and it will automatically update this input
130

130

00:05:26,730  -->  00:05:30,760
whenever we change entered value in code, for example.
131

131

00:05:30,760  -->  00:05:32,570
And that's of course way more convenient,
132

132

00:05:32,570  -->  00:05:34,950
than manually reaching out to the input
133

133

00:05:34,950  -->  00:05:36,860
and managing all of that.
134

134

00:05:36,860  -->  00:05:39,390
But this is just the first step.
135

135

00:05:39,390  -->  00:05:40,810
Now upon a button,
136

136

00:05:40,810  -->  00:05:42,450
we wanna make sure that we
137

137

00:05:42,450  -->  00:05:45,500
get what's currently stored in entered value
138

138

00:05:45,500  -->  00:05:47,223
and add this to goals.
139

139

00:05:48,240  -->  00:05:51,610
For this we can add another key value pair
140

140

00:05:51,610  -->  00:05:54,830
to this object we're passing to createApp,
141

141

00:05:54,830  -->  00:05:57,090
and that's the methods key,
142

142

00:05:57,090  -->  00:05:59,590
which now holds an object.
143

143

00:05:59,590  -->  00:06:02,470
In here we can define methods,
144

144

00:06:02,470  -->  00:06:03,720
functions,
145

145

00:06:03,720  -->  00:06:05,170
that should be callable
146

146

00:06:05,170  -->  00:06:07,970
from inside the HTML code.
147

147

00:06:07,970  -->  00:06:11,550
So for example, here we can add an addGoal method,
148

148

00:06:11,550  -->  00:06:12,720
and in there,
149

149

00:06:12,720  -->  00:06:17,570
then reach out to Goals and add to currently entered value.
150

150

00:06:17,570  -->  00:06:20,020
We can do this with this Goals
151

151

00:06:20,020  -->  00:06:21,350
and then push,
152

152

00:06:21,350  -->  00:06:23,300
since Goals is an array,
153

153

00:06:23,300  -->  00:06:25,630
this entered value.
154

154

00:06:25,630  -->  00:06:29,370
In case you're wondering why this refers to this object
155

155

00:06:29,370  -->  00:06:32,280
Vue will establish the connection behind the scenes.
156

156

00:06:32,280  -->  00:06:34,300
It does some magic for us here,
157

157

00:06:34,300  -->  00:06:35,690
though throughout the course,
158

158

00:06:35,690  -->  00:06:40,010
we are going to explore and also understand that magic.
159

159

00:06:40,010  -->  00:06:42,930
Now addGoal should be triggered
160

160

00:06:42,930  -->  00:06:45,040
whenever this button is clicked.
161

161

00:06:45,040  -->  00:06:49,330
And instead of manually reaching out to the button element
162

162

00:06:49,330  -->  00:06:52,200
and adding a click listener, as we did it before,
163

163

00:06:52,200  -->  00:06:54,330
with just JavaScript,
164

164

00:06:54,330  -->  00:06:55,790
with Vue,
165

165

00:06:55,790  -->  00:06:59,190
we can simply add another special attribute
166

166

00:06:59,190  -->  00:07:00,730
to the button element,
167

167

00:07:00,730  -->  00:07:04,270
the V-on attribute.
168

168

00:07:04,270  -->  00:07:05,810
Then we add a colon,
169

169

00:07:05,810  -->  00:07:08,480
and then the name of the event to which we wanna listen,
170

170

00:07:08,480  -->  00:07:10,850
in this case, click.
171

171

00:07:10,850  -->  00:07:12,600
And then as a value,
172

172

00:07:12,600  -->  00:07:16,090
we specify the name of the method that should be triggered
173

173

00:07:16,090  -->  00:07:17,130
when the item
174

174

00:07:17,130  -->  00:07:20,510
on which we added to this special attribute is clicked.
175

175

00:07:20,510  -->  00:07:21,510
So in our case,
176

176

00:07:21,510  -->  00:07:23,913
addGoal, just like this.
177

177

00:07:25,220  -->  00:07:28,230
With that, Vue will make sure that addGoal,
178

178

00:07:28,230  -->  00:07:29,063
this method,
179

179

00:07:29,063  -->  00:07:33,280
gets executed whenever this button is clicked
180

180

00:07:33,280  -->  00:07:34,950
and it will then automatically
181

181

00:07:34,950  -->  00:07:36,860
give us the currently entered value,
182

182

00:07:36,860  -->  00:07:40,590
and add it as a new value to Goals.
183

183

00:07:40,590  -->  00:07:43,810
And now there's only one thing that remains.
184

184

00:07:43,810  -->  00:07:48,790
We wanna output our Goals here in this unordered list.
185

185

00:07:48,790  -->  00:07:52,020
And for that we wanna create list items here.
186

186

00:07:52,020  -->  00:07:54,110
One for every goal.
187

187

00:07:54,110  -->  00:07:56,540
And with Vue, as I mentioned,
188

188

00:07:56,540  -->  00:07:59,590
we define the desired end result,
189

189

00:07:59,590  -->  00:08:01,470
not how we get there.
190

190

00:08:01,470  -->  00:08:04,140
So again, we wanna have a list item at the end,
191

191

00:08:04,140  -->  00:08:06,060
that's our desired result.
192

192

00:08:06,060  -->  00:08:08,290
But of course not just one.
193

193

00:08:08,290  -->  00:08:10,760
And Vue get the V-for attribute,
194

194

00:08:10,760  -->  00:08:12,800
which we can add on an element
195

195

00:08:12,800  -->  00:08:16,590
to replicate this element multiple times.
196

196

00:08:16,590  -->  00:08:18,460
And here between the double quotes,
197

197

00:08:18,460  -->  00:08:22,790
we then need to write "goal in goals"
198

198

00:08:22,790  -->  00:08:26,490
to in the end loop through all our goals here,
199

199

00:08:26,490  -->  00:08:29,370
and create one list item per a goal.
200

200

00:08:29,370  -->  00:08:31,660
And we get access to that goal,
201

201

00:08:31,660  -->  00:08:33,630
for which we're currently creating one,
202

202

00:08:33,630  -->  00:08:35,830
in this goal variable.
203

203

00:08:35,830  -->  00:08:37,990
Now we can output this goal
204

204

00:08:37,990  -->  00:08:41,400
with another special syntax understood by Vue.
205

205

00:08:41,400  -->  00:08:44,010
And that's double curly braces,
206

206

00:08:44,010  -->  00:08:45,630
opening and closing,
207

207

00:08:45,630  -->  00:08:46,930
and between them,
208

208

00:08:46,930  -->  00:08:48,130
goal.
209

209

00:08:48,130  -->  00:08:50,063
So this name here.
210

210

00:08:51,310  -->  00:08:54,480
And that will now replicate list item as often as needed,
211

211

00:08:54,480  -->  00:08:58,250
and then put one goal per goal entry
212

212

00:08:58,250  -->  00:09:00,203
we have in this goals array.
213

213

00:09:01,610  -->  00:09:04,280
And if we now saved it all and reload,
214

214

00:09:04,280  -->  00:09:06,290
you'll see absolutely nothing.
215

215

00:09:06,290  -->  00:09:09,020
Instead, you just see that curly brace thing,
216

216

00:09:09,020  -->  00:09:10,790
which I'd just entered.
217

217

00:09:10,790  -->  00:09:12,300
The reason for that is that
218

218

00:09:12,300  -->  00:09:14,770
this Vue code will be correct,
219

219

00:09:14,770  -->  00:09:19,270
but Vue doesn't know where that code should have an effect,
220

220

00:09:19,270  -->  00:09:21,530
where it should be applied.
221

221

00:09:21,530  -->  00:09:24,250
That's why on this created app,
222

222

00:09:24,250  -->  00:09:26,760
here, after the closing parentheses,
223

223

00:09:26,760  -->  00:09:28,420
we need to call mount,
224

224

00:09:28,420  -->  00:09:31,690
and let Vue know which part of the page
225

225

00:09:31,690  -->  00:09:34,173
should be controlled by that Vue app.
226

226

00:09:35,020  -->  00:09:37,440
And conveniently, I got a div here,
227

227

00:09:37,440  -->  00:09:38,930
with the ID app,
228

228

00:09:38,930  -->  00:09:41,030
which contains all the markup
229

229

00:09:41,030  -->  00:09:42,750
that uses the Vue features
230

230

00:09:42,750  -->  00:09:44,790
I explained over the last minutes,
231

231

00:09:44,790  -->  00:09:48,170
where I use all the special attributes, for example.
232

232

00:09:48,170  -->  00:09:51,880
This diff with the ID app contains all that code.
233

233

00:09:51,880  -->  00:09:56,450
So it's this diff that should be controlled by this Vue app.
234

234

00:09:56,450  -->  00:09:58,030
And therefore to mount,
235

235

00:09:58,030  -->  00:10:01,720
we pass a string with a CSS selector,
236

236

00:10:01,720  -->  00:10:03,960
selecting one element in the Dom.
237

237

00:10:03,960  -->  00:10:07,970
And since we have the ID app on that dev here,
238

238

00:10:07,970  -->  00:10:12,750
we can use the ID selector for the ID app like this.
239

239

00:10:12,750  -->  00:10:15,033
With hash and then app.
240

240

00:10:16,030  -->  00:10:19,660
And if we save this now and reload again,
241

241

00:10:19,660  -->  00:10:21,730
now, it just looks differently.
242

242

00:10:21,730  -->  00:10:24,360
And if I finished a course, that's added,
243

243

00:10:24,360  -->  00:10:27,930
if I learn Vue, that's being added.
244

244

00:10:27,930  -->  00:10:30,340
And if I wanna reset the input,
245

245

00:10:30,340  -->  00:10:33,820
I can simply set this entered value to an empty string
246

246

00:10:33,820  -->  00:10:36,970
and Vue will automatically reach out to the Dom
247

247

00:10:36,970  -->  00:10:39,073
and make the required updates.
248

248

00:10:40,440  -->  00:10:41,350
So again,
249

249

00:10:41,350  -->  00:10:44,090
learn Vue, and it's clear.
250

250

00:10:44,090  -->  00:10:46,830
Finish the course, and it's cleared.
251

251

00:10:46,830  -->  00:10:49,493
And now this is Vue taking over.
